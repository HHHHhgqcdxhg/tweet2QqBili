<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ggemo.tweet.pojo.dao.Tweet2qqDAO">
  <resultMap id="BaseResultMap" type="com.ggemo.tweet.pojo.dos.Tweet2qqDO">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="tweet_id" jdbcType="VARCHAR" property="tweetId" />
    <id column="qq_group_id" jdbcType="INTEGER" property="qqGroupId" />
    <result column="follow" jdbcType="INTEGER" property="follow" />
    <result column="tweet_nick_name" jdbcType="VARCHAR" property="tweetNickName" />
    <result column="trans" jdbcType="INTEGER" property="trans" />
    <result column="send_rt" jdbcType="INTEGER" property="sendRt" />
    <result column="media_only" jdbcType="INTEGER" property="mediaOnly" />
    <result column="order_" jdbcType="INTEGER" property="order" />
    <result column="format" jdbcType="VARCHAR" property="format" />
  </resultMap>
  <sql id="Param_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Param_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="tweet2qqParam.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    tweet_id, qq_group_id, follow, tweet_nick_name, trans, send_rt, media_only, order_, 
    format
  </sql>
  <select id="selectByParam" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinctSql != null">
      distinct ${distinctSql}
    </if>
    <if test="distinctSql == null">
      <include refid="Base_Column_List" />
    </if>
    from tweet2qq
    <if test="_parameter != null">
      <include refid="Param_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="page">
      limit #{pageIndex},#{pageSize}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="map" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from tweet2qq
    where tweet_id = #{tweetId,jdbcType=VARCHAR}
      and qq_group_id = #{qqGroupId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from tweet2qq
    where tweet_id = #{tweetId,jdbcType=VARCHAR}
      and qq_group_id = #{qqGroupId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByParam">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from tweet2qq
    <if test="_parameter != null">
      <include refid="Param_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyProperty="tweetId" parameterType="com.ggemo.tweet.pojo.dos.Tweet2qqDO" useGeneratedKeys="true">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into tweet2qq (qq_group_id, follow, tweet_nick_name, 
      trans, send_rt, media_only, 
      order_, format)
    values (#{qqGroupId,jdbcType=INTEGER}, #{follow,jdbcType=INTEGER}, #{tweetNickName,jdbcType=VARCHAR}, 
      #{trans,jdbcType=INTEGER}, #{sendRt,jdbcType=INTEGER}, #{mediaOnly,jdbcType=INTEGER}, 
      #{order,jdbcType=INTEGER}, #{format,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" keyProperty="tweetId" parameterType="com.ggemo.tweet.pojo.dos.Tweet2qqDO" useGeneratedKeys="true">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into tweet2qq
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="qqGroupId != null">
        qq_group_id,
      </if>
      <if test="follow != null">
        follow,
      </if>
      <if test="tweetNickName != null">
        tweet_nick_name,
      </if>
      <if test="trans != null">
        trans,
      </if>
      <if test="sendRt != null">
        send_rt,
      </if>
      <if test="mediaOnly != null">
        media_only,
      </if>
      <if test="order != null">
        order_,
      </if>
      <if test="format != null">
        format,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="qqGroupId != null">
        #{qqGroupId,jdbcType=INTEGER},
      </if>
      <if test="follow != null">
        #{follow,jdbcType=INTEGER},
      </if>
      <if test="tweetNickName != null">
        #{tweetNickName,jdbcType=VARCHAR},
      </if>
      <if test="trans != null">
        #{trans,jdbcType=INTEGER},
      </if>
      <if test="sendRt != null">
        #{sendRt,jdbcType=INTEGER},
      </if>
      <if test="mediaOnly != null">
        #{mediaOnly,jdbcType=INTEGER},
      </if>
      <if test="order != null">
        #{order,jdbcType=INTEGER},
      </if>
      <if test="format != null">
        #{format,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByParam" resultType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from tweet2qq
    <if test="_parameter != null">
      <include refid="Param_Where_Clause" />
    </if>
  </select>
  <update id="updateByParamSelective">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update tweet2qq
    <set>
      <if test="record.tweetId != null">
        tweet_id = #{record.tweetId,jdbcType=VARCHAR},
      </if>
      <if test="record.qqGroupId != null">
        qq_group_id = #{record.qqGroupId,jdbcType=INTEGER},
      </if>
      <if test="record.follow != null">
        follow = #{record.follow,jdbcType=INTEGER},
      </if>
      <if test="record.tweetNickName != null">
        tweet_nick_name = #{record.tweetNickName,jdbcType=VARCHAR},
      </if>
      <if test="record.trans != null">
        trans = #{record.trans,jdbcType=INTEGER},
      </if>
      <if test="record.sendRt != null">
        send_rt = #{record.sendRt,jdbcType=INTEGER},
      </if>
      <if test="record.mediaOnly != null">
        media_only = #{record.mediaOnly,jdbcType=INTEGER},
      </if>
      <if test="record.order != null">
        order_ = #{record.order,jdbcType=INTEGER},
      </if>
      <if test="record.format != null">
        format = #{record.format,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Param_Where_Clause" />
    </if>
  </update>
  <update id="updateByParam">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update tweet2qq
    set tweet_id = #{record.tweetId,jdbcType=VARCHAR},
      qq_group_id = #{record.qqGroupId,jdbcType=INTEGER},
      follow = #{record.follow,jdbcType=INTEGER},
      tweet_nick_name = #{record.tweetNickName,jdbcType=VARCHAR},
      trans = #{record.trans,jdbcType=INTEGER},
      send_rt = #{record.sendRt,jdbcType=INTEGER},
      media_only = #{record.mediaOnly,jdbcType=INTEGER},
      order_ = #{record.order,jdbcType=INTEGER},
      format = #{record.format,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Param_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.ggemo.tweet.pojo.dos.Tweet2qqDO">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update tweet2qq
    <set>
      <if test="follow != null">
        follow = #{follow,jdbcType=INTEGER},
      </if>
      <if test="tweetNickName != null">
        tweet_nick_name = #{tweetNickName,jdbcType=VARCHAR},
      </if>
      <if test="trans != null">
        trans = #{trans,jdbcType=INTEGER},
      </if>
      <if test="sendRt != null">
        send_rt = #{sendRt,jdbcType=INTEGER},
      </if>
      <if test="mediaOnly != null">
        media_only = #{mediaOnly,jdbcType=INTEGER},
      </if>
      <if test="order != null">
        order_ = #{order,jdbcType=INTEGER},
      </if>
      <if test="format != null">
        format = #{format,jdbcType=VARCHAR},
      </if>
    </set>
    where tweet_id = #{tweetId,jdbcType=VARCHAR}
      and qq_group_id = #{qqGroupId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ggemo.tweet.pojo.dos.Tweet2qqDO">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update tweet2qq
    set follow = #{follow,jdbcType=INTEGER},
      tweet_nick_name = #{tweetNickName,jdbcType=VARCHAR},
      trans = #{trans,jdbcType=INTEGER},
      send_rt = #{sendRt,jdbcType=INTEGER},
      media_only = #{mediaOnly,jdbcType=INTEGER},
      order_ = #{order,jdbcType=INTEGER},
      format = #{format,jdbcType=VARCHAR}
    where tweet_id = #{tweetId,jdbcType=VARCHAR}
      and qq_group_id = #{qqGroupId,jdbcType=INTEGER}
  </update>
  <insert id="batchInsert" parameterType="com.ggemo.tweet.pojo.dos.Tweet2qqDO">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into tweet2qq
    <trim prefix="(" suffix=")" suffixOverrides=",">
      qq_group_id,follow,tweet_nick_name,trans,send_rt,media_only,order_,format,
    </trim>
    values
    <foreach collection="list" index="index" item="item" separator=",">
      (
      <trim suffixOverrides=",">
        #{item.qqGroupId,jdbcType=INTEGER},#{item.follow,jdbcType=INTEGER},#{item.tweetNickName,jdbcType=VARCHAR},#{item.trans,jdbcType=INTEGER},#{item.sendRt,jdbcType=INTEGER},#{item.mediaOnly,jdbcType=INTEGER},#{item.order,jdbcType=INTEGER},#{item.format,jdbcType=VARCHAR},
      </trim>
      )
    </foreach>
  </insert>
</mapper>