package com.ggemo.tweet.pojo.dos;

import java.util.ArrayList;
import java.util.List;

/**
 * This class was generated by Ali-Generator
 * @author 清纯的小黄瓜
 */
public class Tweet2qqParam {
    /**
     *
     * @mbg.generated
     */
    protected String orderByClause;

    /**
     *
     * @mbg.generated
     */
    @Deprecated
    protected boolean distinct;

    /**
     *
     * @mbg.generated
     */
    protected boolean page;

    /**
     *
     * @mbg.generated
     */
    protected int pageIndex;

    /**
     *
     * @mbg.generated
     */
    protected int pageSize;

    /**
     *
     * @mbg.generated
     */
    protected int pageStart;

    /**
     *
     * @mbg.generated
     */
    protected String distinctSql;

    /**
     *
     * @mbg.generated
     */
    protected List<Criteria> oredCriteria;

    /**
     *
     * @mbg.generated
     */
    public Tweet2qqParam() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * @param orderCondition
     * @param sortType
     * @return
     *
     * @mbg.generated
     */
    public Tweet2qqParam appendOrderByClause(OrderCondition orderCondition, SortType sortType) {
        if (null != orderByClause) {
            orderByClause = orderByClause + ", " + orderCondition.getColumnName() + " " + sortType.getValue();
        } else {
            orderByClause = orderCondition.getColumnName() + " " + sortType.getValue();
        }
        return this;
    }

    /**
     * @return
     *
     * @mbg.generated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * @param distinct
     *
     * @mbg.generated
     */
    @Deprecated
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * @return
     *
     * @mbg.generated
     */
    @Deprecated
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * @param page
     * @return
     *
     * @mbg.generated
     */
    public Tweet2qqParam setPage(boolean page) {
        this.page = page;
        return this;
    }

    /**
     * @return
     *
     * @mbg.generated
     */
    public boolean isPage() {
        return page;
    }

    /**
     * @return
     *
     * @mbg.generated
     */
    public int getPageIndex() {
        return pageIndex;
    }

    /**
     * @param pageSize
     * @return
     *
     * @mbg.generated
     */
    public Tweet2qqParam setPageSize(int pageSize) {
        this.pageSize = pageSize < 1 ? 10 : pageSize;
        this.pageIndex = pageStart < 1 ? 0 : (pageStart - 1) * this.pageSize;
        return this;
    }

    /**
     * @return
     *
     * @mbg.generated
     */
    public int getPageSize() {
        return pageSize;
    }

    /**
     * @param pageStart
     * @return
     *
     * @mbg.generated
     */
    public Tweet2qqParam setPageStart(int pageStart) {
        this.pageStart = pageStart < 1 ? 1 : pageStart;
        this.pageIndex = (this.pageStart - 1) * this.pageSize;
        return this;
    }

    /**
     * @return
     *
     * @mbg.generated
     */
    public int getPageStart() {
        return pageStart;
    }

    /**
     * @param pageStart
     * @param pageSize
     *
     * @mbg.generated
     */
    public void setPagination(int pageStart, int pageSize) {
        this.page = true;
        this.pageSize = pageSize < 1 ? 10 : pageSize;
        this.pageIndex = pageStart < 1 ? 0 : (pageStart - 1) * this.pageSize;
    }

    /**
     * @param condition
     * @return
     *
     * @mbg.generated
     */
    public Tweet2qqParam appendDistinct(OrderCondition condition) {
        if (null != distinctSql){
            distinctSql = distinctSql + ", " + condition.getColumnName();
        } else {
            distinctSql = condition.getColumnName();
        }
        return this;
    }

    /**
     * @return
     *
     * @mbg.generated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * @param criteria
     *
     * @mbg.generated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * @return
     *
     * @mbg.generated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * @return
     *
     * @mbg.generated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * @return
     *
     * @mbg.generated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     *
     * @mbg.generated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     *
     * @mbg.generated
     */
    protected abstract static class AbstractGeneratedCriteria {
        protected List<Criterion> criteria;

        protected AbstractGeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andTweetIdIsNull() {
            addCriterion("tweet_id is null");
            return (Criteria) this;
        }

        public Criteria andTweetIdIsNotNull() {
            addCriterion("tweet_id is not null");
            return (Criteria) this;
        }

        public Criteria andTweetIdEqualTo(String value) {
            addCriterion("tweet_id =", value, "tweetId");
            return (Criteria) this;
        }

        public Criteria andTweetIdNotEqualTo(String value) {
            addCriterion("tweet_id <>", value, "tweetId");
            return (Criteria) this;
        }

        public Criteria andTweetIdGreaterThan(String value) {
            addCriterion("tweet_id >", value, "tweetId");
            return (Criteria) this;
        }

        public Criteria andTweetIdGreaterThanOrEqualTo(String value) {
            addCriterion("tweet_id >=", value, "tweetId");
            return (Criteria) this;
        }

        public Criteria andTweetIdLessThan(String value) {
            addCriterion("tweet_id <", value, "tweetId");
            return (Criteria) this;
        }

        public Criteria andTweetIdLessThanOrEqualTo(String value) {
            addCriterion("tweet_id <=", value, "tweetId");
            return (Criteria) this;
        }

        public Criteria andTweetIdLike(String value) {
            addCriterion("tweet_id like", value, "tweetId");
            return (Criteria) this;
        }

        public Criteria andTweetIdNotLike(String value) {
            addCriterion("tweet_id not like", value, "tweetId");
            return (Criteria) this;
        }

        public Criteria andTweetIdIn(List<String> values) {
            addCriterion("tweet_id in", values, "tweetId");
            return (Criteria) this;
        }

        public Criteria andTweetIdNotIn(List<String> values) {
            addCriterion("tweet_id not in", values, "tweetId");
            return (Criteria) this;
        }

        public Criteria andTweetIdBetween(String value1, String value2) {
            addCriterion("tweet_id between", value1, value2, "tweetId");
            return (Criteria) this;
        }

        public Criteria andTweetIdNotBetween(String value1, String value2) {
            addCriterion("tweet_id not between", value1, value2, "tweetId");
            return (Criteria) this;
        }

        public Criteria andQqGroupIdIsNull() {
            addCriterion("qq_group_id is null");
            return (Criteria) this;
        }

        public Criteria andQqGroupIdIsNotNull() {
            addCriterion("qq_group_id is not null");
            return (Criteria) this;
        }

        public Criteria andQqGroupIdEqualTo(Integer value) {
            addCriterion("qq_group_id =", value, "qqGroupId");
            return (Criteria) this;
        }

        public Criteria andQqGroupIdNotEqualTo(Integer value) {
            addCriterion("qq_group_id <>", value, "qqGroupId");
            return (Criteria) this;
        }

        public Criteria andQqGroupIdGreaterThan(Integer value) {
            addCriterion("qq_group_id >", value, "qqGroupId");
            return (Criteria) this;
        }

        public Criteria andQqGroupIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("qq_group_id >=", value, "qqGroupId");
            return (Criteria) this;
        }

        public Criteria andQqGroupIdLessThan(Integer value) {
            addCriterion("qq_group_id <", value, "qqGroupId");
            return (Criteria) this;
        }

        public Criteria andQqGroupIdLessThanOrEqualTo(Integer value) {
            addCriterion("qq_group_id <=", value, "qqGroupId");
            return (Criteria) this;
        }

        public Criteria andQqGroupIdIn(List<Integer> values) {
            addCriterion("qq_group_id in", values, "qqGroupId");
            return (Criteria) this;
        }

        public Criteria andQqGroupIdNotIn(List<Integer> values) {
            addCriterion("qq_group_id not in", values, "qqGroupId");
            return (Criteria) this;
        }

        public Criteria andQqGroupIdBetween(Integer value1, Integer value2) {
            addCriterion("qq_group_id between", value1, value2, "qqGroupId");
            return (Criteria) this;
        }

        public Criteria andQqGroupIdNotBetween(Integer value1, Integer value2) {
            addCriterion("qq_group_id not between", value1, value2, "qqGroupId");
            return (Criteria) this;
        }

        public Criteria andFollowIsNull() {
            addCriterion("follow is null");
            return (Criteria) this;
        }

        public Criteria andFollowIsNotNull() {
            addCriterion("follow is not null");
            return (Criteria) this;
        }

        public Criteria andFollowEqualTo(Integer value) {
            addCriterion("follow =", value, "follow");
            return (Criteria) this;
        }

        public Criteria andFollowNotEqualTo(Integer value) {
            addCriterion("follow <>", value, "follow");
            return (Criteria) this;
        }

        public Criteria andFollowGreaterThan(Integer value) {
            addCriterion("follow >", value, "follow");
            return (Criteria) this;
        }

        public Criteria andFollowGreaterThanOrEqualTo(Integer value) {
            addCriterion("follow >=", value, "follow");
            return (Criteria) this;
        }

        public Criteria andFollowLessThan(Integer value) {
            addCriterion("follow <", value, "follow");
            return (Criteria) this;
        }

        public Criteria andFollowLessThanOrEqualTo(Integer value) {
            addCriterion("follow <=", value, "follow");
            return (Criteria) this;
        }

        public Criteria andFollowIn(List<Integer> values) {
            addCriterion("follow in", values, "follow");
            return (Criteria) this;
        }

        public Criteria andFollowNotIn(List<Integer> values) {
            addCriterion("follow not in", values, "follow");
            return (Criteria) this;
        }

        public Criteria andFollowBetween(Integer value1, Integer value2) {
            addCriterion("follow between", value1, value2, "follow");
            return (Criteria) this;
        }

        public Criteria andFollowNotBetween(Integer value1, Integer value2) {
            addCriterion("follow not between", value1, value2, "follow");
            return (Criteria) this;
        }

        public Criteria andTweetNickNameIsNull() {
            addCriterion("tweet_nick_name is null");
            return (Criteria) this;
        }

        public Criteria andTweetNickNameIsNotNull() {
            addCriterion("tweet_nick_name is not null");
            return (Criteria) this;
        }

        public Criteria andTweetNickNameEqualTo(String value) {
            addCriterion("tweet_nick_name =", value, "tweetNickName");
            return (Criteria) this;
        }

        public Criteria andTweetNickNameNotEqualTo(String value) {
            addCriterion("tweet_nick_name <>", value, "tweetNickName");
            return (Criteria) this;
        }

        public Criteria andTweetNickNameGreaterThan(String value) {
            addCriterion("tweet_nick_name >", value, "tweetNickName");
            return (Criteria) this;
        }

        public Criteria andTweetNickNameGreaterThanOrEqualTo(String value) {
            addCriterion("tweet_nick_name >=", value, "tweetNickName");
            return (Criteria) this;
        }

        public Criteria andTweetNickNameLessThan(String value) {
            addCriterion("tweet_nick_name <", value, "tweetNickName");
            return (Criteria) this;
        }

        public Criteria andTweetNickNameLessThanOrEqualTo(String value) {
            addCriterion("tweet_nick_name <=", value, "tweetNickName");
            return (Criteria) this;
        }

        public Criteria andTweetNickNameLike(String value) {
            addCriterion("tweet_nick_name like", value, "tweetNickName");
            return (Criteria) this;
        }

        public Criteria andTweetNickNameNotLike(String value) {
            addCriterion("tweet_nick_name not like", value, "tweetNickName");
            return (Criteria) this;
        }

        public Criteria andTweetNickNameIn(List<String> values) {
            addCriterion("tweet_nick_name in", values, "tweetNickName");
            return (Criteria) this;
        }

        public Criteria andTweetNickNameNotIn(List<String> values) {
            addCriterion("tweet_nick_name not in", values, "tweetNickName");
            return (Criteria) this;
        }

        public Criteria andTweetNickNameBetween(String value1, String value2) {
            addCriterion("tweet_nick_name between", value1, value2, "tweetNickName");
            return (Criteria) this;
        }

        public Criteria andTweetNickNameNotBetween(String value1, String value2) {
            addCriterion("tweet_nick_name not between", value1, value2, "tweetNickName");
            return (Criteria) this;
        }

        public Criteria andTransIsNull() {
            addCriterion("trans is null");
            return (Criteria) this;
        }

        public Criteria andTransIsNotNull() {
            addCriterion("trans is not null");
            return (Criteria) this;
        }

        public Criteria andTransEqualTo(Integer value) {
            addCriterion("trans =", value, "trans");
            return (Criteria) this;
        }

        public Criteria andTransNotEqualTo(Integer value) {
            addCriterion("trans <>", value, "trans");
            return (Criteria) this;
        }

        public Criteria andTransGreaterThan(Integer value) {
            addCriterion("trans >", value, "trans");
            return (Criteria) this;
        }

        public Criteria andTransGreaterThanOrEqualTo(Integer value) {
            addCriterion("trans >=", value, "trans");
            return (Criteria) this;
        }

        public Criteria andTransLessThan(Integer value) {
            addCriterion("trans <", value, "trans");
            return (Criteria) this;
        }

        public Criteria andTransLessThanOrEqualTo(Integer value) {
            addCriterion("trans <=", value, "trans");
            return (Criteria) this;
        }

        public Criteria andTransIn(List<Integer> values) {
            addCriterion("trans in", values, "trans");
            return (Criteria) this;
        }

        public Criteria andTransNotIn(List<Integer> values) {
            addCriterion("trans not in", values, "trans");
            return (Criteria) this;
        }

        public Criteria andTransBetween(Integer value1, Integer value2) {
            addCriterion("trans between", value1, value2, "trans");
            return (Criteria) this;
        }

        public Criteria andTransNotBetween(Integer value1, Integer value2) {
            addCriterion("trans not between", value1, value2, "trans");
            return (Criteria) this;
        }

        public Criteria andSendRtIsNull() {
            addCriterion("send_rt is null");
            return (Criteria) this;
        }

        public Criteria andSendRtIsNotNull() {
            addCriterion("send_rt is not null");
            return (Criteria) this;
        }

        public Criteria andSendRtEqualTo(Integer value) {
            addCriterion("send_rt =", value, "sendRt");
            return (Criteria) this;
        }

        public Criteria andSendRtNotEqualTo(Integer value) {
            addCriterion("send_rt <>", value, "sendRt");
            return (Criteria) this;
        }

        public Criteria andSendRtGreaterThan(Integer value) {
            addCriterion("send_rt >", value, "sendRt");
            return (Criteria) this;
        }

        public Criteria andSendRtGreaterThanOrEqualTo(Integer value) {
            addCriterion("send_rt >=", value, "sendRt");
            return (Criteria) this;
        }

        public Criteria andSendRtLessThan(Integer value) {
            addCriterion("send_rt <", value, "sendRt");
            return (Criteria) this;
        }

        public Criteria andSendRtLessThanOrEqualTo(Integer value) {
            addCriterion("send_rt <=", value, "sendRt");
            return (Criteria) this;
        }

        public Criteria andSendRtIn(List<Integer> values) {
            addCriterion("send_rt in", values, "sendRt");
            return (Criteria) this;
        }

        public Criteria andSendRtNotIn(List<Integer> values) {
            addCriterion("send_rt not in", values, "sendRt");
            return (Criteria) this;
        }

        public Criteria andSendRtBetween(Integer value1, Integer value2) {
            addCriterion("send_rt between", value1, value2, "sendRt");
            return (Criteria) this;
        }

        public Criteria andSendRtNotBetween(Integer value1, Integer value2) {
            addCriterion("send_rt not between", value1, value2, "sendRt");
            return (Criteria) this;
        }

        public Criteria andMediaOnlyIsNull() {
            addCriterion("media_only is null");
            return (Criteria) this;
        }

        public Criteria andMediaOnlyIsNotNull() {
            addCriterion("media_only is not null");
            return (Criteria) this;
        }

        public Criteria andMediaOnlyEqualTo(Integer value) {
            addCriterion("media_only =", value, "mediaOnly");
            return (Criteria) this;
        }

        public Criteria andMediaOnlyNotEqualTo(Integer value) {
            addCriterion("media_only <>", value, "mediaOnly");
            return (Criteria) this;
        }

        public Criteria andMediaOnlyGreaterThan(Integer value) {
            addCriterion("media_only >", value, "mediaOnly");
            return (Criteria) this;
        }

        public Criteria andMediaOnlyGreaterThanOrEqualTo(Integer value) {
            addCriterion("media_only >=", value, "mediaOnly");
            return (Criteria) this;
        }

        public Criteria andMediaOnlyLessThan(Integer value) {
            addCriterion("media_only <", value, "mediaOnly");
            return (Criteria) this;
        }

        public Criteria andMediaOnlyLessThanOrEqualTo(Integer value) {
            addCriterion("media_only <=", value, "mediaOnly");
            return (Criteria) this;
        }

        public Criteria andMediaOnlyIn(List<Integer> values) {
            addCriterion("media_only in", values, "mediaOnly");
            return (Criteria) this;
        }

        public Criteria andMediaOnlyNotIn(List<Integer> values) {
            addCriterion("media_only not in", values, "mediaOnly");
            return (Criteria) this;
        }

        public Criteria andMediaOnlyBetween(Integer value1, Integer value2) {
            addCriterion("media_only between", value1, value2, "mediaOnly");
            return (Criteria) this;
        }

        public Criteria andMediaOnlyNotBetween(Integer value1, Integer value2) {
            addCriterion("media_only not between", value1, value2, "mediaOnly");
            return (Criteria) this;
        }

        public Criteria andOrderIsNull() {
            addCriterion("order_ is null");
            return (Criteria) this;
        }

        public Criteria andOrderIsNotNull() {
            addCriterion("order_ is not null");
            return (Criteria) this;
        }

        public Criteria andOrderEqualTo(Integer value) {
            addCriterion("order_ =", value, "order");
            return (Criteria) this;
        }

        public Criteria andOrderNotEqualTo(Integer value) {
            addCriterion("order_ <>", value, "order");
            return (Criteria) this;
        }

        public Criteria andOrderGreaterThan(Integer value) {
            addCriterion("order_ >", value, "order");
            return (Criteria) this;
        }

        public Criteria andOrderGreaterThanOrEqualTo(Integer value) {
            addCriterion("order_ >=", value, "order");
            return (Criteria) this;
        }

        public Criteria andOrderLessThan(Integer value) {
            addCriterion("order_ <", value, "order");
            return (Criteria) this;
        }

        public Criteria andOrderLessThanOrEqualTo(Integer value) {
            addCriterion("order_ <=", value, "order");
            return (Criteria) this;
        }

        public Criteria andOrderIn(List<Integer> values) {
            addCriterion("order_ in", values, "order");
            return (Criteria) this;
        }

        public Criteria andOrderNotIn(List<Integer> values) {
            addCriterion("order_ not in", values, "order");
            return (Criteria) this;
        }

        public Criteria andOrderBetween(Integer value1, Integer value2) {
            addCriterion("order_ between", value1, value2, "order");
            return (Criteria) this;
        }

        public Criteria andOrderNotBetween(Integer value1, Integer value2) {
            addCriterion("order_ not between", value1, value2, "order");
            return (Criteria) this;
        }

        public Criteria andFormatIsNull() {
            addCriterion("format is null");
            return (Criteria) this;
        }

        public Criteria andFormatIsNotNull() {
            addCriterion("format is not null");
            return (Criteria) this;
        }

        public Criteria andFormatEqualTo(String value) {
            addCriterion("format =", value, "format");
            return (Criteria) this;
        }

        public Criteria andFormatNotEqualTo(String value) {
            addCriterion("format <>", value, "format");
            return (Criteria) this;
        }

        public Criteria andFormatGreaterThan(String value) {
            addCriterion("format >", value, "format");
            return (Criteria) this;
        }

        public Criteria andFormatGreaterThanOrEqualTo(String value) {
            addCriterion("format >=", value, "format");
            return (Criteria) this;
        }

        public Criteria andFormatLessThan(String value) {
            addCriterion("format <", value, "format");
            return (Criteria) this;
        }

        public Criteria andFormatLessThanOrEqualTo(String value) {
            addCriterion("format <=", value, "format");
            return (Criteria) this;
        }

        public Criteria andFormatLike(String value) {
            addCriterion("format like", value, "format");
            return (Criteria) this;
        }

        public Criteria andFormatNotLike(String value) {
            addCriterion("format not like", value, "format");
            return (Criteria) this;
        }

        public Criteria andFormatIn(List<String> values) {
            addCriterion("format in", values, "format");
            return (Criteria) this;
        }

        public Criteria andFormatNotIn(List<String> values) {
            addCriterion("format not in", values, "format");
            return (Criteria) this;
        }

        public Criteria andFormatBetween(String value1, String value2) {
            addCriterion("format between", value1, value2, "format");
            return (Criteria) this;
        }

        public Criteria andFormatNotBetween(String value1, String value2) {
            addCriterion("format not between", value1, value2, "format");
            return (Criteria) this;
        }
    }

    /**
     *
     * @mbg.generated do_not_delete_during_merge
     */
    public static class Criteria extends AbstractGeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     *
     * @mbg.generated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }

    /**
     *
     * @mbg.generated
     */
    public enum OrderCondition {
        /**
         *
         */
        TWEETID("tweet_id"),
        /**
         *
         */
        QQGROUPID("qq_group_id"),
        /**
         *boolean, 是否关注
         */
        FOLLOW("follow"),
        /**
         *群里给定的推主的昵称
         */
        TWEETNICKNAME("tweet_nick_name"),
        /**
         *boolean, 是否翻译
         */
        TRANS("trans"),
        /**
         *boolean, 是否转发rt的推文
         */
        SENDRT("send_rt"),
        /**
         *boolean, 是否只发送有图片的推文
         */
        MEDIAONLY("media_only"),
        /**
         *排序
         */
        ORDER("order_"),
        /**
         *转推消息格式
         */
        FORMAT("format");

        private String columnName;

        OrderCondition(String columnName) {
            this.columnName = columnName;
        }

        public String getColumnName() {
            return columnName;
        }

        public static OrderCondition getEnumByName(String name) {
            OrderCondition[] orderConditions = OrderCondition.values();
            for (OrderCondition orderCondition : orderConditions) {
                if (orderCondition.name().equalsIgnoreCase(name)) {
                    return orderCondition;
                }
            }
            throw new RuntimeException("OrderCondition of " + name + " enum not exist");
        }

        @Override
        public String toString() {
            return columnName;
        }
    }

    /**
     *
     * @mbg.generated
     */
    public enum SortType {
        /**
         * 升序
         */
        ASC("asc"),
        /**
         * 降序
         */
        DESC("desc");

        private String value;

        SortType(String value) {
            this.value = value;
        }

        public String getValue() {
            return value;
        }

        public static SortType getEnumByName(String name) {
            SortType[] sortTypes = SortType.values();
            for (SortType sortType : sortTypes) {
                if (sortType.name().equalsIgnoreCase(name)) {
                    return sortType;
                }
            }
            throw new RuntimeException("SortType of " + name + " enum not exist");
        }

        @Override
        public String toString() {
            return value;
        }
    }
}